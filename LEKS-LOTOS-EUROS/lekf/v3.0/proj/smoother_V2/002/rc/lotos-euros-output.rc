! ######################################################################
! ###
! ### output
! ###
! ######################################################################

! ** destination

! destination directory; <project>/<runid> should be included if necessary
le.output.outdir            :  ${my.project.dir}/output


! ** attributes

! global attributes:
le.output.author            :  ${user.longname}
le.output.institution       :  ${user.institution}
le.output.version           :  ${my.le.release}
le.output.model             :  LE
le.output.expid             :  ${run.id}


! ** conventions

! Key "convention" is used for formatting:
!   cf        : following CF conventions
!   racmo     : following requirements for Racmo-LE coupling
!   megapoli  : following requirements for MEGAPOLI project
!
my.output.convention    : cf


! ** overwrite

! replace existing files (T|F) ?
! if False, an error message is issuesed if a file already exist
le.output.replace           :  T


! ** GrADS support

! write GrADS control files (T|F) ?
le.output.ctl               :  F

! deflate level (netcdf4):
!  1 =   lower compression, but faster
! ..
!  9 = highest compression, but slower
le.output.deflate_level     :  1

! ** lockfile

! write lockfile after finishing output ?
le.output.lockfile.apply    :  F
! every .. hour ?
le.output.lockfile.dhour    :  3.0
! filename template, replace %{ccyymmdd} and %{hhmm} by date and time:
le.output.lockfile.template :  ${le.output.outdir}/lock_racmo_%{ccyymmdd}_%{hhmm}


! ** file descriptions

! Key "collect" describes how time records are collected in a single file:
!   daily       :  hours [00,24), used for instantanious fields
!   daily24     :  hours [00,24], used for budgets
!   instant     :  one time record per file

! Key "levtype" describes the type of vertical levels
! (only used for conc and dat files):
!   levels      : model levels; indices 0 (ground), 1 .. nz, nz+1 (aloft)
!   heights     : relative to orography (m)
!   elevations  : relative to sea-level (m)
! The actual levels (indices, or absolute number in m) are set in the key "levels" .
!
! In case of heights/elevations, the key "height_dist" determines
! the vertical sampling method:
!   'sample'    : layer value
!   'interp'    : linear interpolation between mid of layers
!

! Key "dhour" specifies the output frequency in hours, probably "1.0" .
!
my.output.dhour         :  1.0




!
! Tracer names as in array 'specname' :
!   o3 no no2 ...
!   dust_f dust_c ...
! Special names:
!   tpm10 tpm25                   : total aerosol loads
!   tss tdust                     : total seasalt, total dust
!   (tpm25|tpm10|o3)_biascorr     : bias corrected fields
!

! ** data files

!le.output.dat.files                 :  meteo lu pollendat
!le.output.dat.files                 :  meteo
le.output.dat.files                 :  

!~ meteo data:
!le.output.dat.meteo.fields          :  area oro lsm \
!                                       blh h dh dens rhumid temper \
!                                       ovol vol \
!                                       afluxx afluxy afluxz \
!                                       cflx cfly cflz \
!                                       hpressure mpressure\
!                                       icc bcc clwc iclwc praini raini\
!                                       tsurf srh dsurf \
!                                       usurf vsurf wspd_surf wdir_surf \
!                                       sst tcc radd rain snow \
!                                       slt swvl1 swvl2 swvl3 smi2 smi3
le.output.dat.meteo.fields          :  area oro h temper rain 

le.output.dat.meteo.bounding_box    : 
le.output.dat.meteo.levtype         :  levels
le.output.dat.meteo.levels          :  all
le.output.dat.meteo.convention      :  ${my.output.convention}
le.output.dat.meteo.dhour           :  ${my.output.dhour}
le.output.dat.meteo.collect         :  daily

!~ landuse fractions:
le.output.dat.lu.fields             :  lu_grs lu_ara lu_crp lu_cnf lu_dcf lu_wat lu_urb lu_tun lu_des lu_ice lu_sav lu_trf lu_wai lu_med
le.output.dat.lu.bounding_box       : 
le.output.dat.lu.levtype            :  levels
le.output.dat.lu.levels             :  1
le.output.dat.lu.convention         :  ${my.output.convention}
le.output.dat.lu.dhour              :  ${my.output.dhour}
le.output.dat.lu.collect            :  daily

!! pollen data:
!#include lotos-euros-output-pollen.rc


! ** data2 files
le.output.dat2.files                    :
!le.output.dat2.files                    : meteo-2d meteo-3dh meteo-3dih
!le.output.dat2.files                    : meteo-2d meteo-3du meteo-3dv
!le.output.dat2.files                    : meteo-2d meteo-3dc meteo-3du meteo-3dv
!le.output.dat2.files                    :  meteo-2d meteo-3d meteo-h3d
!le.output.dat2.files                    :  meteo-3d meteo-3di meteo-3dih

!~ surface data at grid cells:
le.output.dat2.meteo-2d.fields          :  area lsm tsurf wspd_surf wdir_surf
le.output.dat2.meteo-2d.bounding_box    : 
le.output.dat2.meteo-2d.gridtype        :  cells
le.output.dat2.meteo-2d.levtype         :  levels
le.output.dat2.meteo-2d.levels          :  1
le.output.dat2.meteo-2d.convention      :  ${my.output.convention}
le.output.dat2.meteo-2d.dhour           :  ${my.output.dhour}
le.output.dat2.meteo-2d.collect         :  daily

!~ full level data at cell centers:
le.output.dat2.meteo-3d.fields          :  uv.u uv.v
le.output.dat2.meteo-3d.bounding_box    : 
le.output.dat2.meteo-3d.gridtype        :  cells
le.output.dat2.meteo-3d.levtype         :  levels
le.output.dat2.meteo-3d.levels          :  all
le.output.dat2.meteo-3d.convention      :  ${my.output.convention}
le.output.dat2.meteo-3d.dhour           :  ${my.output.dhour}
le.output.dat2.meteo-3d.collect         :  daily

!~ full level data (input levels!) at grid corners:
le.output.dat2.meteo-3dc.fields          :  u_crnr_met v_crnr_met uv_crnr_met.u uv_crnr_met.v
le.output.dat2.meteo-3dc.bounding_box    : 
le.output.dat2.meteo-3dc.gridtype        :  corners
le.output.dat2.meteo-3dc.levtype         :  levels
le.output.dat2.meteo-3dc.levels          :  1:20
le.output.dat2.meteo-3dc.convention      :  ${my.output.convention}
le.output.dat2.meteo-3dc.dhour           :  ${my.output.dhour}
le.output.dat2.meteo-3dc.collect         :  daily

!~ full level data at u-edges:
le.output.dat2.meteo-3du.fields         :  uflux
le.output.dat2.meteo-3du.bounding_box   : 
le.output.dat2.meteo-3du.gridtype       :  u-edges
le.output.dat2.meteo-3du.levtype        :  levels
le.output.dat2.meteo-3du.levels         :  all
le.output.dat2.meteo-3du.convention     :  ${my.output.convention}
le.output.dat2.meteo-3du.dhour          :  ${my.output.dhour}
le.output.dat2.meteo-3du.collect        :  daily

!~ full level data at v-edges:
le.output.dat2.meteo-3dv.fields         :  vflux
le.output.dat2.meteo-3dv.bounding_box   : 
le.output.dat2.meteo-3dv.gridtype       :  v-edges
le.output.dat2.meteo-3dv.levtype        :  levels
le.output.dat2.meteo-3dv.levels         :  all
le.output.dat2.meteo-3dv.convention     :  ${my.output.convention}
le.output.dat2.meteo-3dv.dhour          :  ${my.output.dhour}
le.output.dat2.meteo-3dv.collect        :  daily

!~ half level data at cells:
le.output.dat2.meteo-3dh.fields          :  kz halt hp
le.output.dat2.meteo-3dh.bounding_box    : 
le.output.dat2.meteo-3dh.gridtype        :  cells
le.output.dat2.meteo-3dh.levtype         :  halflevels
le.output.dat2.meteo-3dh.levels          :  all
le.output.dat2.meteo-3dh.convention      :  ${my.output.convention}
le.output.dat2.meteo-3dh.dhour           :  ${my.output.dhour}
le.output.dat2.meteo-3dh.collect         :  daily

!~ input half level data at cells:
le.output.dat2.meteo-3dih.fields          :  kz_ifs halt_met hp_met
le.output.dat2.meteo-3dih.bounding_box    : 
le.output.dat2.meteo-3dih.gridtype        :  cells
le.output.dat2.meteo-3dih.levtype         :  input_halflevels
le.output.dat2.meteo-3dih.levels          :  all
le.output.dat2.meteo-3dih.convention      :  ${my.output.convention}
le.output.dat2.meteo-3dih.dhour           :  ${my.output.dhour}
le.output.dat2.meteo-3dih.collect         :  daily

! ** concentration files

! Set key 'addheight'    to 'T' to have the height levels written too.
! Set key 'addthickness' to 'T' to have the height thickness written too.

!le.output.conc.files                :  
le.output.conc.files                : conc-3d
!le.output.conc.files                : conc-sfc conc-3d conc-bound conc-3d-full

! surface level only:
!le.output.conc.conc-sfc.fields        : no3a_f no3a_c so4a_f so4a_c nh4a_f \
!                                           ppm_f ppm_c ec_f ec_c pom_f pom_c \
!                                           na_f1 na_f2 na_c1 na_c2 na_c3 \
!                                           dust_f1 dust_f2 dust_c1 dust_c2 dust_c3 \
!                                           tpm25 tpm10 tnmvoc tdust tss
                                           
le.output.conc.conc-sfc.fields        :  dust_f1 dust_f2 dust_c1 dust_c2 dust_c3                                            
le.output.conc.conc-sfc.bounding_box  : 
le.output.conc.conc-sfc.levtype       :  levels
le.output.conc.conc-sfc.levels        :  0
le.output.conc.conc-sfc.addheight     :  F
le.output.conc.conc-sfc.addthickness  :  F
le.output.conc.conc-sfc.halo          :  F
le.output.conc.conc-sfc.dhour         :  ${my.output.dhour}
le.output.conc.conc-sfc.collect       :  daily
le.output.conc.conc-sfc.convention    :  ${my.output.convention}

!le.output.conc.conc-3d.fields         :  o3 no no2 co tpm25 tpm10
le.output.conc.conc-3d.fields         :  ${le.output.conc.conc-sfc.fields}
le.output.conc.conc-3d.bounding_box   : 
le.output.conc.conc-3d.levtype        :  levels
le.output.conc.conc-3d.levels         :  all
le.output.conc.conc-3d.addheight      :  T
le.output.conc.conc-3d.addthickness   :  F
le.output.conc.conc-3d.halo           :  F
le.output.conc.conc-3d.dhour          :  ${my.output.dhour}
le.output.conc.conc-3d.collect        :  daily
le.output.conc.conc-3d.convention     :  ${my.output.convention}
le.output.conc.conc-3d.height_dist    :  -

!..................................................

! TESTING: conc input Santiago T cuando quiera que lea los 3d files
le.input.conc.apply                        :  F
le.input.conc.conc-3d.filenames            : /home/slr/tm5meteo/OpenLE/conc/zeroLE_CALIPSO_V5_conc-3d_%Y%m%d_nao3.nc

! If T will put in zero all variables that are not included in non_zero_variables
le.input.conc.put_zero            : F
le.input.conc.non_zero_variables           : so4a_c
!..................................................
!..................................................

! full level range, top from boundary conditions:
le.output.conc.conc-3d-full.fields         :  o3 ch4 co
le.output.conc.conc-3d-full.bounding_box   : 
le.output.conc.conc-3d-full.levtype        :  levels
le.output.conc.conc-3d-full.levels         :  top
le.output.conc.conc-3d-full.addheight      :  T
le.output.conc.conc-3d-full.addthickness   :  F
le.output.conc.conc-3d-full.halo           :  F
le.output.conc.conc-3d-full.dhour          :  ${my.output.dhour}
le.output.conc.conc-3d-full.collect        :  daily
le.output.conc.conc-3d-full.convention     :  ${my.output.convention}
le.output.conc.conc-3d-full.height_dist    :  -

! 3D fields used for boundary conditions;
! define bounding box to limit data volume:
le.output.conc.conc-bound.fields           :  ${le.output.conc.conc-sfc.fields}
le.output.conc.conc-bound.bounding_box     :  2.0 10.0 48.0 56.0
le.output.conc.conc-bound.levtype          :  levels
le.output.conc.conc-bound.levels           :  all
le.output.conc.conc-bound.addheight        :  F
le.output.conc.conc-bound.addthickness     :  F
le.output.conc.conc-bound.halo             :  F
le.output.conc.conc-bound.dhour            :  ${my.output.dhour}
le.output.conc.conc-bound.collect          :  daily
le.output.conc.conc-bound.convention       :  ${my.output.convention}
le.output.conc.conc-bound.height_dist      :  -


! ** emission files

! only levtype "levels" is supported;
! interpretation of "levels" is:
!   0         : total column
!   1 .. nz   : model layers
!   nz+1      : aloft

! target files:
!le.output.emis.files                    :  
le.output.emis.files                    :  emis
!le.output.emis.files                    :  emis emis_bio

! total emissions:
le.output.emis.emis.fields              :  ${le.output.conc.conc-sfc.fields}

le.output.emis.emis.bounding_box        :   
le.output.emis.emis.levtype             :  levels
le.output.emis.emis.levels              :  0
le.output.emis.emis.dhour               :  ${my.output.dhour}
le.output.emis.emis.collect             :  daily24
le.output.emis.emis.convention          :  ${my.output.convention}
le.output.emis.emis.bio                 :  F

! bio emissions:
le.output.emis.emis_bio.fields          :  iso no terp
le.output.emis.emis_bio.bounding_box    :   
le.output.emis.emis_bio.levtype         :  levels
le.output.emis.emis_bio.levels          :  0
le.output.emis.emis_bio.dhour           :  ${my.output.dhour}
le.output.emis.emis_bio.collect         :  daily24
le.output.emis.emis_bio.convention      :  ${my.output.convention}
le.output.emis.emis_bio.bio             :  T

! ** vd files

!
! supported fields that are important for deposition:
!    Ra_<lu>          (x,y,h,t)     ! [s/m] atm. resistance over [z0,z0+h]
!    Rb_<tr>_<lu>     (x,y  ,t)     ! [s/m] laminair visc. bound. layer resistance
!    Rc_<tr>_<lu>     (x,y  ,t)     ! [s/m] canopy surface resistance
!    vd_<tr>_<lu>     (x,y,h,t)     ! [m/s] deposition velocity
!    lufrac_<lu>      (x,y    )     ! [0-1] landuse fraction
!    fluxdry_<tr>_<lu>(x,y  ,t)     ! [kg/m2/s] drydeposition flux
!    area             (x,y    )     ! [m2] grid cell area
!    fstom_o3_hr      (x,y  ,t)     ! [umol m-2 s-1] LU dependent stomatal ozone flux
!    Rstom            (x,y  ,t)     ! [s/m] Stomatal resistance
!    lai              (x,y  ,t)     ! [m2 leaf m-2 surface] Leaf Area Index
!    sai              (x,y  ,t)     ! [m2 leaf m-2 surface] Surface Area Index
!    rbc_o3_lu        (x,y  ,t)     ! [s/m] canopy surface and boud. layer resistance
!    czcanopytop_lu   (x,y  ,t)     ! [mol mol-1] canopy surface concentrations (IN Future change to concentration output??)
!    
! landuse classes following DEPAC :
!   grs = grass                     
!   ara = arable                    
!   crp = permanent crops           
!   cnf = coniferous forest         
!   dec = deciduous forest          
!   wat = water                     
!   urb = urban                     
!   oth = other (short grassy area) 
!   dsr = desert 
!
!   whe = wheat
!   bee = beeches
!   spr = spruce
!   sem = semi-natural grassland                   
!

! compute ozone flux specials (T|F) ?
!    fstom_o3_hr      (x,y  ,t)     ! [umol m-2 s-1] LU dependent stomatal ozone flux
!    Rstom            (x,y  ,t)     ! [s/m] Stomatal resistance
!    rbc_o3_lu        (x,y  ,t)     ! [s/m] canopy surface and boud. layer resistance
!    czcanopytop_lu   (x,y  ,t)     ! [mol mol-1] canopy surface concentrations (IN Future change to concentration output??)
!deposition.extra_output   :  T
deposition.extra_output   :  F

le.output.vd.files                  :  
!le.output.vd.files                  :  vd
!
le.output.vd.vd.fields              :  fluxdry vd
le.output.vd.vd.tracers             :  o3 no hno3 so2 nh3 no2 no3a_f nh4a_f so4a_f so4a_c no3a_c
le.output.vd.vd.landuses            :  grs ara crp cnf dec
le.output.vd.vd.bounding_box        : 
le.output.vd.vd.levtype             :  heights
le.output.vd.vd.levels              :  0.0 2.5 5.0 10.0 20.0 25.0
le.output.vd.vd.convention          :  ${my.output.convention}
le.output.vd.vd.dhour               :  ${my.output.dhour}
le.output.vd.vd.collect             :  daily


! deposition velocities and resistances, diagnostic calculations on different heigths
! surface concentrations calculated for different landuse surface types

le.output.vd-diag.files                  :  
!le.output.vd-diag.files                  :  vd-diag conc-sfc-lu

le.output.vd-diag.vd-diag.fields         :  vd
le.output.vd-diag.vd-diag.tracers        :  o3 no hno3 so2 n2o5 no3 no2 nh3 na_f na_ff na_c na_cc na_ccc so4a_f so4a_c
le.output.vd-diag.vd-diag.landuses       :  grs ara crp cnf dec wat urb oth dsr
le.output.vd-diag.vd-diag.bounding_box   : 
le.output.vd-diag.vd-diag.levtype        :  heights
le.output.vd-diag.vd-diag.levels         :  0.0 2.5 25.0
le.output.vd-diag.vd-diag.convention     :  ${my.output.convention}
le.output.vd-diag.vd-diag.dhour          :  ${my.output.dhour}
le.output.vd-diag.vd-diag.collect        :  daily

le.output.vd-diag.conc-sfc-lu.fields         :  conc_sfc_lu
le.output.vd-diag.conc-sfc-lu.tracers        :  o3 no hno3 so2 n2o5 no3 no2 nh3 na_f na_ff na_c na_cc na_ccc so4a_f so4a_c
le.output.vd-diag.conc-sfc-lu.landuses       :  grs ara crp cnf dec wat urb oth dsr
le.output.vd-diag.conc-sfc-lu.bounding_box   : 
le.output.vd-diag.conc-sfc-lu.levtype        :  levels
le.output.vd-diag.conc-sfc-lu.levels         :  0
le.output.vd-diag.conc-sfc-lu.convention     :  ${my.output.convention}
le.output.vd-diag.conc-sfc-lu.dhour          :  ${my.output.dhour}
le.output.vd-diag.conc-sfc-lu.collect        :  daily

! ** dry depositon budgets (hourly)

! target files:
le.output.drydep.files              :  
!le.output.drydep.files              :  drydepo dryemis

! specify per target:
le.output.drydep.drydepo.fields      :  ${le.output.conc.conc-sfc.fields}
le.output.drydep.drydepo.bounding_box:  
le.output.drydep.drydepo.dhour       :  ${my.output.dhour}
le.output.drydep.drydepo.collect     :  daily24
le.output.drydep.drydepo.convention  :  ${my.output.convention}
le.output.drydep.drydepo.process     :  drydepo

! specify per target:
le.output.drydep.dryemis.fields      :  nh3
le.output.drydep.dryemis.bounding_box:  
le.output.drydep.dryemis.dhour       :  ${my.output.dhour}
le.output.drydep.dryemis.collect     :  daily24
le.output.drydep.dryemis.convention  :  ${my.output.convention}
le.output.drydep.dryemis.process     :  dryemis


! ** wet depositon budgets (hourly)

! target files:
le.output.wetdep.files              :  
!le.output.wetdep.files              :  wetdepo

! specify per target:
le.output.wetdep.wetdepo.fields      :  ${le.output.conc.conc-sfc.fields}
le.output.wetdep.wetdepo.bounding_box:  
le.output.wetdep.wetdepo.dhour       :  ${my.output.dhour}
le.output.wetdep.wetdepo.collect     :  daily24
le.output.wetdep.wetdepo.convention  :  ${my.output.convention}


! ** budgets (daily)

! daily budget files to be put out:
le.output.budget.files              :  
!le.output.budget.files              :  budget

! specify per target file:
! supported fields:
!  daily dry deposition budgets :
!    dry[sox|noy|nhx]
!  daily wet deposition budgets : 
!    wet[sox|noy|nhx]
!  ozone dry deposition flux and emission per landuse class:
!    o3[fe]_[gr|ar|pc|cf|df|wa|ur|sg|de|wh|sp|be|se]
!  daily ozone maximum:
!    o3max
!  NH3 of previous month:
!    nh3ave
le.output.budget.budget.fields      :  wetsox wetnoy wetnhx \
                                       drysox drynoy drynhx
                                       !\
                                       o3max nh3ave
le.output.budget.budget.bounding_box : 
le.output.budget.budget.landuses     :  grs ara crp cnf dec


! ** tracer columns

! target files:
le.output.column.files                  :  
!le.output.column.files                  :  column col200

! specify per target:
le.output.column.column.fields          : no2
le.output.column.column.bounding_box    :  
! level type: "all" for model layers only, "top" including aloft
le.output.column.column.levtype         :  top
! top in Pa, 0.0 for all:
le.output.column.column.ptop            :  0.0
! time resolution:
le.output.column.column.dhour           :  ${my.output.dhour}
le.output.column.column.collect         :  daily
! save in kg/m2:
le.output.column.column.convention      :  ${my.output.convention}
!! save in column mixing ratio (ppb):
!le.output.column.column.convention      :  x

! specify per target:
le.output.column.col200.fields          :  no2
le.output.column.col200.bounding_box    :  
! level type: "all" for model layers only, "top" including aloft
le.output.column.col200.levtype         :  top
! top in Pa, 0.0 for all:
le.output.column.col200.ptop            :  200.0e2
! time resolution:
le.output.column.col200.dhour           :  ${my.output.dhour}
le.output.column.col200.collect         :  daily
! save in kg/m2:
le.output.column.col200.convention      :  ${my.output.convention}
!! save in column mixing ratio (ppb):
!le.output.column.col200.convention      :  x

! ** AOD files

! target files:
le.output.aod.files                     :  
!le.output.aod.files                     :  aod

! specify per target:
le.output.aod.aod.biascorr              :  F
le.output.aod.aod.bounding_box          :  
le.output.aod.aod.dhour                 :  1.0
le.output.aod.aod.convention            :  ${my.output.convention}


! ** radiance output

! target files:
!le.output.rad.files                 :  
le.output.rad.files                 :  aod2

le.output.rad.aod2.fields           :  aod tau extinciton ssa asy \ 
                                       angstrom_modis angstrom_aeronet angstrom_polder

!le.output.rad.aod2.fields           :  aod \ 
!                                       angstrom_modis angstrom_aeronet angstrom_polder

le.output.rad.aod2.wavelengths      :  all

le.output.rad.aod2.bounding_box    : 
le.output.rad.aod2.levtype         :  levels
le.output.rad.aod2.levels          :  all
le.output.rad.aod2.convention      :  ${my.output.convention}
le.output.rad.aod2.dhour           :  ${my.output.dhour}
le.output.rad.aod2.collect         :  daily


! *** OMI tropospheric columns

! put out simulated columnes ? leave empty for not;
! provide keyword used in filenames (currently only 1 output possible):
le.output.omi_trc.files                 :  
!le.output.omi_trc.files                 :  omi_${le.output.omi_trc.tracer}

! which tracer ? currently files available for:
!  no2   : original data
!  form  : simulated formaldehyde
le.output.omi_trc.tracer         :  no2

!
! template for filenames, supported keys:
!   %{year}      : year
!   %{yyyymmdd}  : 8-digit day
!   %{TRACER}    : tracer (uppercase)
!   %{tracer}    : tracer (lowercase)
!
le.output.omi_trc.filenames      :  /data/TEMIS/airpollution/no2col/data/omi/eu_v2/%{year}/%{month}/OMI-Aura_NO2_%{yyyymmdd}.nc

! tropospheric averaging kernel only valid for tropospheric layers;
! specify pressure top for troposphere (Pa);
! here we use 200 hPa folllowing page 4 of ISOTROP document 
!   "Synthetic Observations Product Specification" :
le.output.omi_trc.ptropo         :  200.0e2

! Boundary fields needed for merging top boundary with LE layers at OMI-column
! Calculation with pressure levels and concentration fields
! Use correct values from boundary input (is this case macc_rea)
le.output.omi_trc.top_hp         : __cams_nrt_hp
le.output.omi_trc.top_trc        : __cams_nrt_no2


!
! ** "Sat" files
!    EMIP processed
!

! file keys:
le.output.sat.files              :  tropomi-no2


!
!~ tropomi no2
!

! tracer:
le.output.sat.tropomi-no2.tracer        :  no2

!
! Template for filenames, supported keys:
!   %{yyyy}, %{mm}, %{dd}, %{hh}, %{mn}   : date/time elements
!   %{TRACER}, %{tracer}                  : tracer (upper case, lower case)
!
! Files produced by "EMIP/v1.2" conversion tool.
!
!le.output.sat.tropomi-no2.filename      :  ${my.scratch}/EMIP/TROPOMI/%{TRACER}/${grid.name}/%{yyyy}/%{mm}/S5P_OFFL_L2_%{TRACER}_%{yyyy}%{mm}%{dd}_%{hh}%{mn}.nc
le.output.sat.tropomi-no2.filename      :  

! variable names:
le.output.sat.tropomi-no2.varname.hp    :  pressure_levels
le.output.sat.tropomi-no2.varname.yr    :  vcd_trop
le.output.sat.tropomi-no2.varname.sr    :  sigma_vcd_trop

! corners included:
le.output.sat.tropomi-no2.with_corners  :  T

! profiles? otherwise column is assumed:
le.output.sat.tropomi-no2.with_profile  :  F

! a-priori profiles included?
le.output.sat.tropomi-no2.with_apriori  :  F

! representation error type:
!   data     : as provided in observation file, 
!               eventually with scaling factor
!   frac     : as fraction of observed value
!
le.output.sat.tropomi-no2.r.type           :  data
!le.output.sat.tropomi-no2.r.type           :  frac
!
! r from data; extra scaling factor?
!le.output.sat.tropomi-no2.r.data.scaling   :  1.0
!
!! representation error as fraction of observation;
!!   example:  r = 30% y
!!   trancated to [1.2,3.6]   (reached for y=4 and y=12)
!le.output.sat.tropomi-no2.r.frac.factor    :  0.30
!le.output.sat.tropomi-no2.r.frac.min       :  1.2
!le.output.sat.tropomi-no2.r.frac.max       :  3.6





!=======================================================================
!===
!=== MODIS
!===
!=======================================================================


! list with MODIS files to put out (space seperated, empty for none);
! this defines the name of the file; no further settings yet:
le.output.modis.files             :  
!le.output.modis.files             :  modis

!
! Data files are stored in:
!   <archive>/<platform>/
! Each of these directories should contain a listing file with all file names:
!   <product>.list
! Filename contains the 'average' time ;
! for Europe, the actual measurement times differ less than 5 minutes:
!   <product>.A<year><jday>.<hour><minu>.*.*.hdf
!

! archive directory:
le.output.modis.archive           :  /projects/SATELLIETEN/MODIS_c5/2006
le.output.modis.platforms         :  AQUA1 TERRA
! AQUA1 settings:
le.output.modis.AQUA1.product     :  MYD04_L2
! TERRA settings:
le.output.modis.TERRA.product     :  MOD04_L2


! ** MAORI output

! MAORI : sample model at station locations
!   Used for Kalman Filter, not supported for model yet.
!maori.sets                        :  



!=======================================================================
!===
!=== CSO
!===
!=======================================================================


! file keys:
!le.output.cso.files                     :  
!le.output.cso.files                     :  polder-aod-443 polder-aod-865 polder-ssa-563 polder-aaod aeronet-aod-500 aeronet-aod-440 aeronet-aod-870 iasi-nh3 iasi-so2

!le.output.cso.files                     :  modis-terra modis-aqua 

!le.output.cso.files                     :  emep-pm10 emep-pm25
!le.output.cso.files                     :  polder-aod emep-pm10 emep-pm25 aeronet-aod-500 aeronet-aod-440 aeronet-aod-870 
!le.output.cso.files 			:  calipso
le.output.cso.files 			:  polder-aod
!-----------------------------------------------------------------------
! POLDER aod
!-----------------------------------------------------------------------

! listing file:
le.output.cso.polder-aod.listing           :   /projects/0/tm5meteo/OpenLE/POLDER_obs_error/listing_POLDER.csv
!le.output.cso.polder-aod.listing           :   /projects/0/tm5meteo/OpenLE/POLDER_Perfect/listing_POLDER_Perfect.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.polder-aod.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.polder-aod.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.polder-aod.mapping.levels    :  0
le.output.cso.polder-aod.mapping.levels    :  3

! tracer:
le.output.cso.polder-aod.tracer            :  aod_563nm

!~ data

! data variables:
le.output.cso.polder-aod.dvars             :  yr obs_error
le.output.cso.polder-aod.varname.yr        :  yr
le.output.cso.polder-aod.varname.obs_error        : obs_error

! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.polder-aod.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.polder-aod.dvar.yr.source    :  AOD565

! Observation error: 
!~ dimensions, copied from data file:
le.output.cso.polder-aod.dvar.obs_error.dims      :  retr
!~ source variable:
le.output.cso.polder-aod.dvar.obs_error.source    : obs_error_AOD565


!~ state

! state varaiables to be put out from model:
!le.output.cso.polder-aod.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.polder-aod.vars                         :  mod_aod ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.polder-aod.var.mod_aod.dims            :  model_total
!~ standard attributes:
le.output.cso.polder-aod.var.mod_aod.attrs           :  long_name units
le.output.cso.polder-aod.var.mod_aod.attr.long_name  :  model AOD 565
le.output.cso.polder-aod.var.mod_aod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.polder-aod.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.polder-aod.var.ys.formula               :  AOD
le.output.cso.polder-aod.var.ys.formula_terms         :  AOD: mod_aod
!~ standard attributes:
le.output.cso.polder-aod.var.ys.attrs                 :  long_name units
le.output.cso.polder-aod.var.ys.attr.long_name        :  simulated AOD 563 retrieval
le.output.cso.polder-aod.var.ys.attr.units					  :  1   


!-----------------------------------------------------------------------
! POLDER aaod
!-----------------------------------------------------------------------

! listing file:
le.output.cso.polder-aaod.listing           :   /projects/0/tm5meteo/OpenLE/POLDER/listing_POLDER.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.polder-aaod.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.polder-aaod.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.polder-aaod.mapping.levels    :  0
le.output.cso.polder-aaod.mapping.levels    :  3

! tracer:
le.output.cso.polder-aaod.tracer            :  aaod_563nm

!~ data

! data variables:
le.output.cso.polder-aaod.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.polder-aaod.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.polder-aaod.dvar.yr.source    :  AAOD565

!~ state

! state varaiables to be put out from model:
!le.output.cso.polder-aaod.vars                         :  aaod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.polder-aaod.vars                         :  mod_aaod ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.polder-aaod.var.mod_aaod.dims            :  model_total
!~ standard attributes:
le.output.cso.polder-aaod.var.mod_aaod.attrs           :  long_name units
le.output.cso.polder-aaod.var.mod_aaod.attr.long_name  :  model AAOD 565
le.output.cso.polder-aaod.var.mod_aaod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.polder-aaod.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.polder-aaod.var.ys.formula               :  AAOD
le.output.cso.polder-aaod.var.ys.formula_terms         :  AAOD: mod_aaod
!~ standard attributes:
le.output.cso.polder-aaod.var.ys.attrs                 :  long_name units
le.output.cso.polder-aaod.var.ys.attr.long_name        :  simulated AAOD 563 retrieval
le.output.cso.polder-aaod.var.ys.attr.units					  :  1   


!-----------------------------------------------------------------------
! POLDER aod 443nm
!-----------------------------------------------------------------------

! listing file:
le.output.cso.polder-aod-443.listing           :   /projects/0/tm5meteo/OpenLE/POLDER/listing_POLDER.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.polder-aod-443.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.polder-aod-443.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.polder-aod-443.mapping.levels    :  0
le.output.cso.polder-aod-443.mapping.levels    :  3

! tracer:
le.output.cso.polder-aod-443.tracer            :  aod_440nm

!~ data

! data variables:
le.output.cso.polder-aod-443.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.polder-aod-443.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.polder-aod-443.dvar.yr.source    :  AOD443

!~ state

! state varaiables to be put out from model:
!le.output.cso.polder-aod-443.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.polder-aod-443.vars                         :  mod_aod ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.polder-aod-443.var.mod_aod.dims            :  model_total
!~ standard attributes:
le.output.cso.polder-aod-443.var.mod_aod.attrs           :  long_name units
le.output.cso.polder-aod-443.var.mod_aod.attr.long_name  :  model AOD 443
le.output.cso.polder-aod-443.var.mod_aod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.polder-aod-443.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.polder-aod-443.var.ys.formula               :  AOD
le.output.cso.polder-aod-443.var.ys.formula_terms         :  AOD: mod_aod
!~ standard attributes:
le.output.cso.polder-aod-443.var.ys.attrs                 :  long_name units
le.output.cso.polder-aod-443.var.ys.attr.long_name        :  simulated AOD 443 retrieval
le.output.cso.polder-aod-443.var.ys.attr.units					  :  1   


!-----------------------------------------------------------------------
! POLDER aod 865
!-----------------------------------------------------------------------

! listing file:
le.output.cso.polder-aod-865.listing           :   /projects/0/tm5meteo/OpenLE/POLDER/listing_POLDER.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.polder-aod-865.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.polder-aod-865.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.polder-aod-865.mapping.levels    :  0
le.output.cso.polder-aod-865.mapping.levels    :  3

! tracer:
le.output.cso.polder-aod-865.tracer            :  aod_865nm

!~ data

! data variables:
le.output.cso.polder-aod-865.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.polder-aod-865.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.polder-aod-865.dvar.yr.source    :  AOD865

!~ state

! state varaiables to be put out from model:
!le.output.cso.polder-aod-865.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.polder-aod-865.vars                         :  mod_aod ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.polder-aod-865.var.mod_aod.dims            :  model_total
!~ standard attributes:
le.output.cso.polder-aod-865.var.mod_aod.attrs           :  long_name units
le.output.cso.polder-aod-865.var.mod_aod.attr.long_name  :  model AOD 865
le.output.cso.polder-aod-865.var.mod_aod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.polder-aod-865.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.polder-aod-865.var.ys.formula               :  AOD
le.output.cso.polder-aod-865.var.ys.formula_terms         :  AOD: mod_aod
!~ standard attributes:
le.output.cso.polder-aod-865.var.ys.attrs                 :  long_name units
le.output.cso.polder-aod-865.var.ys.attr.long_name        :  simulated AOD 865 retrieval
le.output.cso.polder-aod-865.var.ys.attr.units					  :  1   




!-----------------------------------------------------------------------
! POLDER Angstrom Exponent
!-----------------------------------------------------------------------

! listing file:
le.output.cso.polder-ae.listing           :   /projects/0/tm5meteo/OpenLE/POLDER/listing_POLDER.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.polder-ae.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.polder-ae.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.polder-ae.mapping.levels    :  0
le.output.cso.polder-ae.mapping.levels    :  3

! tracer:
le.output.cso.polder-ae.tracer            :  angstrom_polder

!~ data

! data variables:
le.output.cso.polder-ae.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.polder-ae.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.polder-ae.dvar.yr.source    :  AExp

!~ state

! state varaiables to be put out from model:
!le.output.cso.polder-ae.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.polder-ae.vars                         :  mod_angstrom ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.polder-ae.var.mod_angstrom.dims            :  model_total_ae
!~ standard attributes:
le.output.cso.polder-ae.var.mod_angstrom.attrs           :  long_name units
le.output.cso.polder-ae.var.mod_angstrom.attr.long_name  :  model AOD 443 and AOD 865
le.output.cso.polder-ae.var.mod_angstrom.attr.units  :  polder

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.polder-ae.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.polder-ae.var.ys.formula               :  AEx
le.output.cso.polder-ae.var.ys.formula_terms         :  AEx: mod_angstrom
!~ standard attributes:
le.output.cso.polder-ae.var.ys.attrs                 :  long_name units
le.output.cso.polder-ae.var.ys.attr.long_name        :  simulated AE Polder 443-865
! Using the units to choice the instrument (aeronet,modis,polder)
le.output.cso.polder-ae.var.ys.attr.units					  :  polder  


!-----------------------------------------------------------------------
! POLDER Single Scattering Albedo 563nm
!-----------------------------------------------------------------------

! listing file:
le.output.cso.polder-ssa-563.listing           :   /projects/0/tm5meteo/OpenLE/POLDER/listing_POLDER.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.polder-ssa-563.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.polder-ssa-563.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.polder-ssa-563.mapping.levels    :  0
le.output.cso.polder-ssa-563.mapping.levels    :  3

! tracer:
le.output.cso.polder-ssa-563.tracer            :  ssa_563nm

!~ data

! data variables:
le.output.cso.polder-ssa-563.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.polder-ssa-563.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.polder-ssa-563.dvar.yr.source    :  SSA565

!~ state

! state varaiables to be put out from model:
!le.output.cso.polder-ssa-563.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.polder-ssa-563.vars                         :  mod_ssa ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.polder-ssa-563.var.mod_ssa.dims            :  model_total_ae
!~ standard attributes:
le.output.cso.polder-ssa-563.var.mod_ssa.attrs           :  long_name units
le.output.cso.polder-ssa-563.var.mod_ssa.attr.long_name  :  model SSA 563 nm
le.output.cso.polder-ssa-563.var.mod_ssa.attr.units  :  polder

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.polder-ssa-563.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.polder-ssa-563.var.ys.formula               :  SSA
le.output.cso.polder-ssa-563.var.ys.formula_terms         :  SSA: mod_ssa
!~ standard attributes:
le.output.cso.polder-ssa-563.var.ys.attrs                 :  long_name units
le.output.cso.polder-ssa-563.var.ys.attr.long_name        :  simulated SSA 563
! Using the units to choice the instrument (aeronet,modis,polder)
le.output.cso.polder-ssa-563.var.ys.attr.units					  :  1 





!-----------------------------------------------------------------------
! MODIS Terra
!-----------------------------------------------------------------------

! listing file:
le.output.cso.modis-terra.listing           :   /projects/0/tm5meteo/OpenLE/MODIS/listing_modis_MOD04_L2.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.modis-terra.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.modis-terra.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.modis-terra.mapping.levels    :  0
le.output.cso.modis-terra.mapping.levels    :  3

! tracer:
le.output.cso.modis-terra.tracer            :  aod_550nm

!~ data

! data variables:
le.output.cso.modis-terra.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.modis-terra.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.modis-terra.dvar.yr.source    :  AOD550

!~ state

! state varaiables to be put out from model:
!le.output.cso.modis-terra.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.modis-terra.vars                         :  mod_aod ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.modis-terra.var.mod_aod.dims            :  model_total
!~ standard attributes:
le.output.cso.modis-terra.var.mod_aod.attrs           :  long_name units
le.output.cso.modis-terra.var.mod_aod.attr.long_name  :  model AOD 550
le.output.cso.modis-terra.var.mod_aod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.modis-terra.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.modis-terra.var.ys.formula               :  AOD
le.output.cso.modis-terra.var.ys.formula_terms         :  AOD: mod_aod
!~ standard attributes:
le.output.cso.modis-terra.var.ys.attrs                 :  long_name units
le.output.cso.modis-terra.var.ys.attr.long_name        :  simulated AOD 550 retrieval
le.output.cso.modis-terra.var.ys.attr.units					  :  1   

!-----------------------------------------------------------------------
! MODIS Aqua
!-----------------------------------------------------------------------

! listing file:
le.output.cso.modis-aqua.listing           :   /projects/0/tm5meteo/OpenLE/MODIS/listing_modis_MYD04_L2.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.modis-aqua.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.modis-aqua.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.modis-aqua.mapping.levels    :  0
le.output.cso.modis-aqua.mapping.levels    :  3

! tracer:
le.output.cso.modis-aqua.tracer            :  aod_550nm

!~ data

! data variables:
le.output.cso.modis-aqua.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.modis-aqua.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.modis-aqua.dvar.yr.source    :  AOD550

!~ state

! state varaiables to be put out from model:
!le.output.cso.modis-aqua.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.modis-aqua.vars                         :  mod_aod ys

! model concentration profile:
!~ model layer dimension:
le.output.cso.modis-aqua.var.mod_aod.dims            :  model_total
!~ standard attributes:
le.output.cso.modis-aqua.var.mod_aod.attrs           :  long_name units
le.output.cso.modis-aqua.var.mod_aod.attr.long_name  :  model AOD 550
le.output.cso.modis-aqua.var.mod_aod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.modis-aqua.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.modis-aqua.var.ys.formula               :  AOD
le.output.cso.modis-aqua.var.ys.formula_terms         :  AOD: mod_aod
!~ standard attributes:
le.output.cso.modis-aqua.var.ys.attrs                 :  long_name units
le.output.cso.modis-aqua.var.ys.attr.long_name        :  simulated AOD 550 retrieval
le.output.cso.modis-aqua.var.ys.attr.units					  :  1   

!-----------------------------------------------------------------------
! IASI nh3
!-----------------------------------------------------------------------

! listing file:
le.output.cso.iasi-nh3.listing           :   /projects/0/tm5meteo/OpenLE/IASI_NH3/listing_IASI.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.iasi-nh3.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.iasi-nh3.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.iasi-nh3.mapping.levels    :  0
le.output.cso.iasi-nh3.mapping.levels    :  3

! tracer:
le.output.cso.iasi-nh3.tracer            :  nh3

!~ data

! data variables:
le.output.cso.iasi-nh3.dvars             :  hp yr A

! half-level pressures:
!~ dimensions, copied from data file:
le.output.cso.iasi-nh3.dvar.hp.dims      :  layeri
!~ source variable:
le.output.cso.iasi-nh3.dvar.hp.source    :  pressure

! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.iasi-nh3.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.iasi-nh3.dvar.yr.source    :  NH3


! kernel:
!~ dimensions, copied from data file:
le.output.cso.iasi-nh3.dvar.A.dims       :  retr layer
!~ source variable:
le.output.cso.iasi-nh3.dvar.A.source     :  kernel

!~ state

! state varaiables to be put out from model:
le.output.cso.iasi-nh3.vars                         :  mod_conc mod_hp hx ys

! model concentration profile:
!~ model layer dimension:
le.output.cso.iasi-nh3.var.mod_conc.dims            :  model_layer
!~ standard attributes:
le.output.cso.iasi-nh3.var.mod_conc.attrs           :  long_name units
le.output.cso.iasi-nh3.var.mod_conc.attr.long_name  :  model NH3 concentrations
le.output.cso.iasi-nh3.var.mod_conc.attr.units      :  ppb

! model hpentration profile:
!~ model layer interfaces:
le.output.cso.iasi-nh3.var.mod_hp.dims              :  model_layeri
!~ standard attributes:
le.output.cso.iasi-nh3.var.mod_hp.attrs             :  long_name units
le.output.cso.iasi-nh3.var.mod_hp.attr.long_name    :  model pressure at layer interfaces
le.output.cso.iasi-nh3.var.mod_hp.attr.units        :  Pa

! model concentrations at apriori layers:
!~ apriori layers:
le.output.cso.iasi-nh3.var.hx.dims                  :  layer
!~ how computed:
le.output.cso.iasi-nh3.var.hx.formula               :  LayerAverage( hp, mod_hp, mod_conc )
le.output.cso.iasi-nh3.var.hx.formula_terms         :  hp: hp mod_hp: mod_hp mod_conc: mod_conc
!~ standard attributes:
le.output.cso.iasi-nh3.var.hx.attrs                 :  long_name units
le.output.cso.iasi-nh3.var.hx.attr.long_name        :  model simulations at apriori layers
le.output.cso.iasi-nh3.var.hx.attr.units            :  mol m-2

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.iasi-nh3.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.iasi-nh3.var.ys.formula               :  A x
le.output.cso.iasi-nh3.var.ys.formula_terms         :  A: A x: hx
!~ standard attributes:
le.output.cso.iasi-nh3.var.ys.attrs                 :  long_name units multiplication_factor_to_convert_to_molecules_percm2
le.output.cso.iasi-nh3.var.ys.attr.long_name        :  simulated retrieval
le.output.cso.iasi-nh3.var.ys.attr.units            :  mol m-2
le.output.cso.iasi-nh3.var.ys.attr.multiplication_factor_to_convert_to_molecules_percm2 : float: 6.022141e+19


!-----------------------------------------------------------------------
! IASI so2
!-----------------------------------------------------------------------

! listing file:
le.output.cso.iasi-so2.listing           :   /projects/0/tm5meteo/OpenLE/IASI_SO2/listing_IASI.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.iasi-so2.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.iasi-so2.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.iasi-so2.mapping.levels    :  0
le.output.cso.iasi-so2.mapping.levels    :  3

! tracer:
le.output.cso.iasi-so2.tracer            :  so2

!~ data

! data variables:
le.output.cso.iasi-so2.dvars             :  hp yr A

! half-level pressures:
!~ dimensions, copied from data file:
le.output.cso.iasi-so2.dvar.hp.dims      :  layeri
!~ source variable:
le.output.cso.iasi-so2.dvar.hp.source    :  pressure

! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.iasi-so2.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.iasi-so2.dvar.yr.source    :  SO2


! kernel:
!~ dimensions, copied from data file:
le.output.cso.iasi-so2.dvar.A.dims       :  retr layer
!~ source variable:
le.output.cso.iasi-so2.dvar.A.source     :  kernel

!~ state

! state varaiables to be put out from model:
le.output.cso.iasi-so2.vars                         :  mod_conc mod_hp hx ys

! model concentration profile:
!~ model layer dimension:
le.output.cso.iasi-so2.var.mod_conc.dims            :  model_layer
!~ standard attributes:
le.output.cso.iasi-so2.var.mod_conc.attrs           :  long_name units
le.output.cso.iasi-so2.var.mod_conc.attr.long_name  :  model SO2 concentrations
le.output.cso.iasi-so2.var.mod_conc.attr.units      :  ppb

! model hpentration profile:
!~ model layer interfaces:
le.output.cso.iasi-so2.var.mod_hp.dims              :  model_layeri
!~ standard attributes:
le.output.cso.iasi-so2.var.mod_hp.attrs             :  long_name units
le.output.cso.iasi-so2.var.mod_hp.attr.long_name    :  model pressure at layer interfaces
le.output.cso.iasi-so2.var.mod_hp.attr.units        :  Pa

! model concentrations at apriori layers:
!~ apriori layers:
le.output.cso.iasi-so2.var.hx.dims                  :  layer
!~ how computed:
le.output.cso.iasi-so2.var.hx.formula               :  LayerAverage( hp, mod_hp, mod_conc )
le.output.cso.iasi-so2.var.hx.formula_terms         :  hp: hp mod_hp: mod_hp mod_conc: mod_conc
!~ standard attributes:
le.output.cso.iasi-so2.var.hx.attrs                 :  long_name units
le.output.cso.iasi-so2.var.hx.attr.long_name        :  model simulations at apriori layers
le.output.cso.iasi-so2.var.hx.attr.units            :  mol m-2

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.iasi-so2.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.iasi-so2.var.ys.formula               :  A x
le.output.cso.iasi-so2.var.ys.formula_terms         :  A: A x: hx
!~ standard attributes:
le.output.cso.iasi-so2.var.ys.attrs                 :  long_name units multiplication_factor_to_convert_to_molecules_percm2
le.output.cso.iasi-so2.var.ys.attr.long_name        :  simulated retrieval
le.output.cso.iasi-so2.var.ys.attr.units            :  mol m-2
le.output.cso.iasi-so2.var.ys.attr.multiplication_factor_to_convert_to_molecules_percm2 : float: 6.02214179e+19



!-----------------------------------------------------------------------
! AERONET aod 440nm
!-----------------------------------------------------------------------

! listing file:
le.output.cso.aeronet-aod-440.listing           :   /projects/0/tm5meteo/OpenLE/AERONET/listing_AERONET.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.aeronet-aod-440.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.aeronet-aod-440.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.aeronet-aod-440.mapping.levels    :  0
le.output.cso.aeronet-aod-440.mapping.levels    :  3

! tracer:
le.output.cso.aeronet-aod-440.tracer            :  aod_440nm

!~ data

! data variables:
le.output.cso.aeronet-aod-440.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.aeronet-aod-440.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.aeronet-aod-440.dvar.yr.source    :  AOD440

!~ state

! state varaiables to be put out from model:
!le.output.cso.aeronet-aod-440.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.aeronet-aod-440.vars                         :  mod_aod ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.aeronet-aod-440.var.mod_aod.dims            :  model_total
!~ standard attributes:
le.output.cso.aeronet-aod-440.var.mod_aod.attrs           :  long_name units
le.output.cso.aeronet-aod-440.var.mod_aod.attr.long_name  :  model AOD 440
le.output.cso.aeronet-aod-440.var.mod_aod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.aeronet-aod-440.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.aeronet-aod-440.var.ys.formula               :  AOD
le.output.cso.aeronet-aod-440.var.ys.formula_terms         :  AOD: mod_aod
!~ standard attributes:
le.output.cso.aeronet-aod-440.var.ys.attrs                 :  long_name units
le.output.cso.aeronet-aod-440.var.ys.attr.long_name        :  simulated AOD 440 retrieval
le.output.cso.aeronet-aod-440.var.ys.attr.units					  :  1   

!-----------------------------------------------------------------------
! AERONET aod 870nm
!-----------------------------------------------------------------------

! listing file:
le.output.cso.aeronet-aod-870.listing           :   /projects/0/tm5meteo/OpenLE/AERONET/listing_AERONET.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.aeronet-aod-870.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.aeronet-aod-870.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.aeronet-aod-870.mapping.levels    :  0
le.output.cso.aeronet-aod-870.mapping.levels    :  3

! tracer:
le.output.cso.aeronet-aod-870.tracer            :  aod_870nm

!~ data

! data variables:
le.output.cso.aeronet-aod-870.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.aeronet-aod-870.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.aeronet-aod-870.dvar.yr.source    :  AOD870

!~ state

! state varaiables to be put out from model:
!le.output.cso.aeronet-aod-870.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.aeronet-aod-870.vars                         :  mod_aod ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.aeronet-aod-870.var.mod_aod.dims            :  model_total
!~ standard attributes:
le.output.cso.aeronet-aod-870.var.mod_aod.attrs           :  long_name units
le.output.cso.aeronet-aod-870.var.mod_aod.attr.long_name  :  model AOD 870
le.output.cso.aeronet-aod-870.var.mod_aod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.aeronet-aod-870.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.aeronet-aod-870.var.ys.formula               :  AOD
le.output.cso.aeronet-aod-870.var.ys.formula_terms         :  AOD: mod_aod
!~ standard attributes:
le.output.cso.aeronet-aod-870.var.ys.attrs                 :  long_name units
le.output.cso.aeronet-aod-870.var.ys.attr.long_name        :  simulated AOD 870 retrieval
le.output.cso.aeronet-aod-870.var.ys.attr.units					  :  1   


!-----------------------------------------------------------------------
! AERONET aod 500nm
!-----------------------------------------------------------------------

! listing file:
le.output.cso.aeronet-aod-500.listing           :   /projects/0/tm5meteo/OpenLE/AERONET/listing_AERONET.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.aeronet-aod-500.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.aeronet-aod-500.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.aeronet-aod-500.mapping.levels    :  0
le.output.cso.aeronet-aod-500.mapping.levels    :  3

! tracer:
le.output.cso.aeronet-aod-500.tracer            :  aod_490nm

!~ data

! data variables:
le.output.cso.aeronet-aod-500.dvars             :  yr


! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.aeronet-aod-500.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.aeronet-aod-500.dvar.yr.source    :  AOD500

!~ state

! state varaiables to be put out from model:
!le.output.cso.aeronet-aod-500.vars                         :  aod_mod mod_hp mod_tcc mod_cc hx ys
le.output.cso.aeronet-aod-500.vars                         :  mod_aod ys


! model concentration profile:
!~ model layer dimension:
le.output.cso.aeronet-aod-500.var.mod_aod.dims            :  model_total
!~ standard attributes:
le.output.cso.aeronet-aod-500.var.mod_aod.attrs           :  long_name units
le.output.cso.aeronet-aod-500.var.mod_aod.attr.long_name  :  model AOD 500
le.output.cso.aeronet-aod-500.var.mod_aod.attr.units  :  1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.aeronet-aod-500.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.aeronet-aod-500.var.ys.formula               :  AOD
le.output.cso.aeronet-aod-500.var.ys.formula_terms         :  AOD: mod_aod
!~ standard attributes:
le.output.cso.aeronet-aod-500.var.ys.attrs                 :  long_name units
le.output.cso.aeronet-aod-500.var.ys.attr.long_name        :  simulated AOD 500 retrieval
le.output.cso.aeronet-aod-500.var.ys.attr.units					  :  1   


!-----------------------------------------------------------------------
! emep pm10
!-----------------------------------------------------------------------

! listing file:
le.output.cso.emep-pm10.listing           :   /projects/0/tm5meteo/OpenLE/EMEP/listing_EMEP_PM10.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.emep-pm10.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.emep-pm10.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.emep-pm10.mapping.levels    :  0
le.output.cso.emep-pm10.mapping.levels    :  3

! tracer:
le.output.cso.emep-pm10.tracer            :  tpm10

!~ data

! data variables:
le.output.cso.emep-pm10.dvars             :  yr

! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.emep-pm10.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.emep-pm10.dvar.yr.source    :  PM10

!~ state

! state varaiables to be put out from model:
le.output.cso.emep-pm10.vars                         :  mod_surface ys

! model concentration profile:
!~ model layer dimension:
le.output.cso.emep-pm10.var.mod_surface.dims            :  model_sfc
!~ standard attributes:
le.output.cso.emep-pm10.var.mod_surface.attrs           :  long_name units
le.output.cso.emep-pm10.var.mod_surface.attr.long_name  :  model PM10 surface
le.output.cso.emep-pm10.var.mod_surface.attr.units      :  ug/m3


! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.emep-pm10.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.emep-pm10.var.ys.formula               :  SFC
le.output.cso.emep-pm10.var.ys.formula_terms         :  SFC: mod_surface
!~ standard attributes:
le.output.cso.emep-pm10.var.ys.attrs                 :  long_name units 
le.output.cso.emep-pm10.var.ys.attr.long_name        :  simulated retrieval
le.output.cso.emep-pm10.var.ys.attr.units            :  ug/m3


!-----------------------------------------------------------------------
! emep pm25
!-----------------------------------------------------------------------

! listing file:
le.output.cso.emep-pm25.listing           :   /projects/0/tm5meteo/OpenLE/EMEP/listing_EMEP_PM25.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.emep-pm25.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.emep-pm25.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.emep-pm25.mapping.levels    :  0
le.output.cso.emep-pm25.mapping.levels    :  3

! tracer:
le.output.cso.emep-pm25.tracer            :  tpm25

!~ data

! data variables:
le.output.cso.emep-pm25.dvars             :  yr

! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.emep-pm25.dvar.yr.dims      :  retr
!~ source variable:
le.output.cso.emep-pm25.dvar.yr.source    :  PM25

!~ state

! state varaiables to be put out from model:
le.output.cso.emep-pm25.vars                         :  mod_surface ys

! model concentration profile:
!~ model layer dimension:
le.output.cso.emep-pm25.var.mod_surface.dims            :  model_sfc
!~ standard attributes:
le.output.cso.emep-pm25.var.mod_surface.attrs           :  long_name units
le.output.cso.emep-pm25.var.mod_surface.attr.long_name  :  model PM25 surface
le.output.cso.emep-pm25.var.mod_surface.attr.units      :  ug/m3


! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.emep-pm25.var.ys.dims                  :  retr
!~ how computed:
le.output.cso.emep-pm25.var.ys.formula               :  SFC
le.output.cso.emep-pm25.var.ys.formula_terms         :  SFC: mod_surface
!~ standard attributes:
le.output.cso.emep-pm25.var.ys.attrs                 :  long_name units 
le.output.cso.emep-pm25.var.ys.attr.long_name        :  simulated retrieval
le.output.cso.emep-pm25.var.ys.attr.units            :  ug/m3

!-----------------------------------------------------------------------
! CALIPSO AEC
!-----------------------------------------------------------------------

! listing file:
le.output.cso.calipso.listing           :   /projects/0/tm5meteo/OpenLE/CALIPSO/listing_calipso.csv

! also read info on original track (T|F)?
! if enabled, this will be stored in the output too:
le.output.cso.calipso.with_track        :  F

! put out mapping arrays? used for gridded averages:
le.output.cso.calipso.with_mapping      :  T

! mapping from footprints to grid cells using sample points in polygon;
! sample points is centroid of footprint (level 0),
! or centroids of triangles in which footprint is recursevely devided;
! number of points for 4-sided footprint:
!  1 point (levels=0), 4 (1), 16 (2), 64 (3)
!le.output.cso.calipso.mapping.levels    :  0
le.output.cso.calipso.mapping.levels    :  3

! tracer:
le.output.cso.calipso.tracer            :  extinction_550nm

!~ data

! data variables:
le.output.cso.calipso.dvars             :  hp yr

! half-level pressures:
!~ dimensions, copied from data file:
le.output.cso.calipso.dvar.hp.dims      :  layeri
!~ source variable:
le.output.cso.calipso.dvar.hp.source    :  pressure

! retrieval: 
!~ dimensions, copied from data file:
le.output.cso.calipso.dvar.yr.dims      :  layeri
!~ source variable:
le.output.cso.calipso.dvar.yr.source    :  AEC


!~ state

! state varaiables to be put out from model:
le.output.cso.calipso.vars                         :  mod_aec mod_hp hx ys

! model concentration profile:
!~ model layer dimension:
le.output.cso.calipso.var.mod_aec.dims            :  model_layer
!~ standard attributes:
le.output.cso.calipso.var.mod_aec.attrs           :  long_name units
le.output.cso.calipso.var.mod_aec.attr.long_name  :  model extinction coefficient 
le.output.cso.calipso.var.mod_aec.attr.units      :  m-1

! model hpentration profile:
!~ model layer interfaces:
le.output.cso.calipso.var.mod_hp.dims              :  model_layeri
!~ standard attributes:
le.output.cso.calipso.var.mod_hp.attrs             :  long_name units
le.output.cso.calipso.var.mod_hp.attr.long_name    :  model pressure at layer interfaces
le.output.cso.calipso.var.mod_hp.attr.units        :  Pa

! model concentrations at apriori layers:
!~ apriori layers:
le.output.cso.calipso.var.hx.dims                  :  layer
!~ how computed:
le.output.cso.calipso.var.hx.formula               :  LayerAverage( hp, mod_hp, mod_conc )
le.output.cso.calipso.var.hx.formula_terms         :  hp: hp mod_hp: mod_hp mod_conc: mod_aec
!~ standard attributes:
le.output.cso.calipso.var.hx.attrs                 :  long_name units
le.output.cso.calipso.var.hx.attr.long_name        :  model simulations at apriori layers
le.output.cso.calipso.var.hx.attr.units            :  m-1

! TO BE DONE
! - simulated retrievals
!~ retrieval layers:
le.output.cso.calipso.var.ys.dims                  :  layer
!~ how computed:
le.output.cso.calipso.var.ys.formula               :  AEC
le.output.cso.calipso.var.ys.formula_terms         :  AEC: hx
!~ standard attributes:
le.output.cso.calipso.var.ys.attrs                 :  long_name units 
le.output.cso.calipso.var.ys.attr.long_name        :  simulated retrieval
le.output.cso.calipso.var.ys.attr.units            :  m-1


