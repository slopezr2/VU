!#######################################################################
!
! AUTH specific settings
!
!#######################################################################


!----------------------------------------------------------------------
! user names
!----------------------------------------------------------------------

! used for output attributes ...

! name of institution:
user.institution              :  AUTH

! extract user long name from environment variable:
user.longname                 :  ${USER}



!----------------------------------------------------------------------
! environment
!----------------------------------------------------------------------

!! adhoc: assign dummy values to define environment variables
!! that are not present yet, but will be defined by the modules:
!USERLONGNAME            :  /no/USERLONGNAME
!LE_DATA                 :  /no/LE_DATA
!MODAS_SCRATCH           :  /no/MODAS_SCRATCH
!SCRATCH                 :  /no/SCRATCH
!NETCDF_FORTRAN_HOME     :  /no/NETCDF_FORTRAN_HOME
!NETCDF_C_HOME           :  /no/NETCDF_C_HOME
!HDF5_HOME               :  /no/HDF5_HOME
!UDUNITS_HOME            :  /no/UDUNITS_HOME
!LAPACK_HOME             :  /no/LAPACK_HOME
!SPBLAS_HOME             :  /no/SPBLAS_HOME

! modules loaded in job scripts:
*.modules                     :  purge ; \
                                 load python ; \
                                 load gcc/8.2.0 ; \
                                 load openmpi/3.1.3 ; \
                                 load udunits


!----------------------------------------------------------------------
! tasks and threads
!----------------------------------------------------------------------

! number of MPI tasks in run step:
#if "${par.mpi}" in ["True"] :
my.run.ntask                      :  ${par.ntask}
#elif "${par.mpi}" in ["False"] :
my.run.ntask                      :  1
#else
#error Could not set number of MPI tasks for par.mpi "${par.mpi}"
#endif

! number of OpenMP threads in run step:
#if "${par.openmp}" in ["True"] :
my.run.nthread                    :  ${par.nthread}
#elif "${par.openmp}" in ["False"] :
my.run.nthread                    :  1
#else
#error Could not set number of OpenMP threads for par.openmp "${par.openmp}"
#endif


!----------------------------------------------------------------------
! job scripts
!----------------------------------------------------------------------

! default class with the job script creator:
*.script.class           :  utopya.UtopyaJobScriptBatchSlurm

! Define batch job option format for class 'JobScriptBatchSlurm':
!   #SBATCH --flag=value
slurm_format.comment       :  #
slurm_format.prefix        :  SBATCH
slurm_format.arg           :  '--'
slurm_format.assign        :  '='
slurm_format.template      :  %(key)
slurm_format.envtemplate   :  %(env:key)

! job format for this application:
*.batch.slurm.format            :  slurm_format

! which keywords:
!*.batch.slurm.options           :  name nodes tasks threads memory no-requeue time output error
*.batch.slurm.options           :  name nodes tasks threads time  output error partition memory

! default values:
*.batch.slurm.option.name       :  job-name %(env:name).${run.id}
*.batch.slurm.option.nodes      :  nodes 1
*.batch.slurm.option.tasks      :  ntasks 1
*.batch.slurm.option.threads    :  cpus-per-task 1
*.batch.slurm.option.partition  : partition testing
*.batch.slurm.option.time       : time 24:00:00
!*.batch.slurm.option.time       : time 168:00:00
!*.batch.slurm.option.memory     :  mem 8Gb
!*.batch.slurm.option.no-requeue :  no-requeue
*.batch.slurm.option.output     :  output %(env:name).out
*.batch.slurm.option.error      :  error  %(env:name).err

! specific:
jobtree.le.run.batch.slurm.option.tasks      :  ntasks ${my.run.ntask}
jobtree.le.run.batch.slurm.option.threads    :  cpus-per-task ${my.run.nthread}
jobtree.le.run.batch.slurm.option.memory     :  mem ${my.run.memory}Gb


!----------------------------------------------------------------------
! runner
!----------------------------------------------------------------------

! run model:
#if "${par.mpi}" in ["True"]

! SLURM version of "mpirun" ;
! number of tasks etc taken from batch job environment;
! create stdout/stderr files files including task number:

le.run.command     :  srun \
                        --output=le.run.out.%t \
                        --error=le.run.err.%t \
                        ./lotos-euros.x ${my.le.run.rcfile}

#else

! run model, pass evaluated rcfile as argument:
le.run.command     :  ./lotos-euros.x ${my.le.run.rcfile}

#endif


!----------------------------------------------------------------------
! compiler settings
!----------------------------------------------------------------------

! settings for GNU Fortran compiler:
#include /mnt/lapsat/groups/lapsat/lotos-euros/openle-master/v2.2/scratch-mariliza/rc/compiler-gcc-8.2.0.rc

! MPI wrappers:
configure.compiler.fc.mpi                   :  mpifort
configure.compiler.fc.mpi.openmp            :  mpifort


!----------------------------------------------------------------------
! libraries
!----------------------------------------------------------------------

! (optional) macro to enable udunits library:
!my.udunits.define             :  
!my.udunits.define             :  with_udunits1
my.udunits.define             :  with_udunits2


!
! * library flags
!

! NetCDF library:
NETCDF_HOME                     : /mnt/apps/aristotle/site/linux-centos7-x86_64/gcc-8.2.0/netcdf-4.6.1-zytnw4i4ze4ouiybhzfvuxosng2n5kwr
NETCDF_FORTRAN_HOME             : /mnt/apps/aristotle/site/linux-centos7-x86_64/gcc-8.2.0/netcdf-fortran-4.4.4-oxi6qm3ekkpayk6tw3xj4j4pv66qrdso

! NetCDF4 library:
configure.lib.netcdf.fflags       : -I${NETCDF_FORTRAN_HOME}/include
configure.lib.netcdf.ldflags      : -L${NETCDF_FORTRAN_HOME}/lib -lnetcdff -Wl,-rpath -Wl,${NETCDF_FORTRAN_HOME}/lib \
                                    -L${NETCDF_HOME}/lib -lnetcdf -Wl,-rpath -Wl,${NETCDF_HOME}/lib

! UDUnits library:
UDUNITS_HOME                      :/mnt/apps/aristotle/site/linux-centos7-x86_64/gcc-8.2.0/udunits2-2.2.24-fi4k3aoj7mtijj2c6xaea5n53oxhqlnt/
configure.lib.udunits2.fflags     : 
configure.lib.udunits2.ldflags    : -L${UDUNITS_HOME}/lib -ludunits2 -Wl,-rpath -Wl,${UDUNITS_HOME}/lib

!! Lapack library:
!LAPACK_HOME                     : /usr
!compiler.lib.lapack.fflags      : -I${LAPACK_HOME}/include
!compiler.lib.lapack.libs        : -L${LAPACK_HOME}/lib -llapack
!
!! Intel Math Kernel Library (blas,lapack,...)
!compiler.lib.mkl.fflags         :
!#if "${par.openmp}" in ["T","True"]
!compiler.lib.mkl.libs           :  -lmkl_intel -lmkl_intel_thread -lmkl_core -liomp5 -lpthread
!#else
!compiler.lib.mkl.libs           :  -lmkl_intel -lmkl_sequential   -lmkl_core
!#endif


!----------------------------------------------------------------------
! makedep
!----------------------------------------------------------------------

! Is makedepf90 installed?
! This flag is used in the 'expert.rc' settings:
my.with.makedep            :  True


!----------------------------------------------------------------------
! model data
!----------------------------------------------------------------------

! the user scratch directory:
!my.scratch                    :  ${SCRATCH}
my.scratch                    :  /mnt/lapsat/groups/lapsat/lotos-euros/openle-master/v2.2/scratch-mariliza

! base path to input data files:
!my.data.dir                   :  ${LE_DATA}
!my.data.dir                   :  ${PWD}/inputdata_Europe/${my.le.version}
my.data.dir                   :  /mnt/lapsat/groups/lapsat/lotos-euros/lotos-euros/v2.2.000/inputdata_Europe/v2.2

! observation data:
OBSERVATIONS                  :


!----------------------------------------------------------------------
! end
!----------------------------------------------------------------------


